using Plots; default(markerstrokecolor=:auto, label="")
using Statistics: mean
using WAV: wavread
using LinearAlgebra: dot
using Sound: soundsc
using FFTW: fft


name = "happy.wav"

y, S = wavread(name)

N = 2048 # samples per note
z = reshape(y, N, :) # 26 notes of 3000 samples each
Z = 2/N*abs.(fft(z, 1)) # 1D FFT of each column of z
p1 = heatmap(Z, color = :viridis,
ylabel = "frequency index l = k+1",
ylims = (0, 100), title = "Victors spectrogram",
xlabel = "time segment")
savefig("victors1.pdf")
display(Z[1])
display(findall(Z .> 0.04))

##calculates duration of lookupNotes

a = reshape(y, N, :) # N × M
b = a[end-99:end,:] # possible zeros
c = sum(abs, b, dims=1)
e = findall(==(0), vec(c))
lookupNoteLocations = [0; e[1:end-1]]
push!(lookupNoteLocations, e[end]) #finds all note durations

display(lookupNoteLocations)

lookupFreq = [261.63,277.18,293.67,311.13,329.63,349.23,369.99,392,415.3,440,466.16,493.88,523.25,554.37,587.33,622.25,659.26,698.46,739.99,783.99,830.61,880,932.33,987.77,1046.5] 
lookupNote = ["C4", "C#4", "D4", "D#4", "E4", "F4", "F#4", "G4", "G#4", "A4", "A#4", "B4", "C5", "C#5", "D5", "D#5", "E5", "F5", "F#5", "G5", "G#5", "A5", "A#5", "B5", "C6"]

tone = []
durations = [] #stores 
frequencies = []
 

previousN = 0
for i in 1:length(lookupNoteLocations) - 1
   duration = lookupNoteLocations[i+1] - lookupNoteLocations[i] #finds how many quarter lookupNotes each lookupNote is
   push!(durations, duration * 1.0)
   global N = 2048 * duration #calcualtes N based on lookupNote duration
   n = 0:N-1; t = n/S
   x = y[(previousN) + 1 .+ n];
   global previousN = previousN + N #calcualtes new starting point based on lookupNote duration
   
   #correaltion method using lookup table above for basic waveform
   c1 = [dot(cos.(2π/S * f * (0:N-1)), x) for f in lookupFreq]
   s1 = [dot(sin.(2π/S * f * (0:N-1)), x) for f in lookupFreq]
   corr1 = c1.^2 + s1.^2
   
   I1 = argmax(corr1)
   global tone = [tone ; string(I1)];
 
end

toneString = ""

for i in 1:length(tone)
   global toneString = toneString * string(lookupFreq[parse(Int64, tone[i])]) * " "
   push!(frequencies, lookupFreq[parse(Int64, tone[i])])
end
 


display(frequencies)
display(durations)

